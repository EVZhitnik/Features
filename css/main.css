@charset "UTF-8";
@font-face {
  font-family: "Bitter";
  src: url("../fonts/Bitter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bitter";
  src: url("../fonts/Bitter-ExtraBold.woff2") format("woff2");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --color-white: #FFFFFF;
  --color-grey: #CCCCCC;
  --color-dark-grey: #666666;
  --color-dark: #414141;
  --color-blue: #0070A0;
  --color-accent: #FFD11A;
  --gradient: linear-gradient(
      45deg,
      var(--color-dark-15) 64%,
      var(--color-accent) 136%
  );
  --shadow: 0 0 0 0.25rem #191919;
  --font-family-base: "Bitter", sans-serif;
  --container-width: 100rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  color: var(--color-gray-50);
  background-color: var(--color-light);
}
body.is-open {
  overflow: hidden;
}

h1, .h1,
h2, .h2,
h3, .h3 {
  color: var(--color-dark-grey);
}

h1, .h1 {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
}

h2, .h2 {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
}

h3, .h3 {
  font-size: 1.125rem;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

section:not(:last-child) {
  margin-bottom: 3.125rem;
}

.predloader__inner {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.predloader__body {
  display: flex;
  gap: 0.625rem;
}
.predloader__body:not(:last-child) {
  margin-bottom: 1.875rem;
}
.predloader__point {
  width: 0.9375rem;
  height: 0.9375rem;
  background-color: var(--color-blue);
  border-radius: 50%;
  animation: bounce 0.6s infinite alternate;
}
.predloader__point:nth-child(2) {
  animation-delay: 0.2s;
}
.predloader__point:nth-child(3) {
  animation-delay: 0.4s;
}
@keyframes bounce {
  from {
    transform: translateY(0);
    opacity: 0.6;
  }
  to {
    transform: translateY(-1.25rem);
    opacity: 1;
  }
}
.predloader__spinner {
  width: 3.125rem;
  height: 3.125rem;
  border: 0.3125rem solid var(--color-grey);
  border-top-color: var(--color-blue);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.margin {
  text-align: center;
}
.margin:not(:last-child) {
  margin-bottom: 1.875rem;
}
.margin--vercarousel:not(:last-child) {
  margin-bottom: 9.375rem;
}

.rotating-card__inner {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.rotating-card__body {
  width: 18.75rem;
  height: 12.5rem;
  perspective: 62.5rem;
}
.rotating-card__content {
  width: 100%;
  height: 100%;
  transition: transform 0.2s ease-in-out;
  position: relative;
  transform-style: preserve-3d;
  transform: rotateY(0deg);
}
@media (any-hover: hover) {
  .rotating-card__content:hover {
    transform: rotateY(180deg);
  }
}
@media (any-hover: none) {
  .rotating-card__content:active {
    transform: rotateY(180deg);
  }
}
.rotating-card__face {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  position: absolute;
  backface-visibility: hidden;
  border-radius: 0.75rem;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.4);
}
.rotating-card__front {
  background-color: #f39c12;
  color: var(--color-white);
}
.rotating-card__back {
  background-color: #e74c3c;
  color: var(--color-white);
  transform: rotateY(180deg);
}

.search__body {
  transition: width 0.2s ease-in-out;
  position: relative;
  width: 2.5rem;
  margin: 0 auto;
}
@media (any-hover: hover) {
  .search__body:hover {
    width: 15.625rem;
  }
  .search__body:hover .search__button {
    transform: translateY(-50%) rotate(360deg);
  }
  .search__body:hover .search__input {
    opacity: 1;
  }
}
@media (any-hover: none) {
  .search__body:active {
    width: 15.625rem;
  }
  .search__body:active .search__button {
    transform: translateY(-50%) rotate(360deg);
  }
  .search__body:active .search__input {
    opacity: 1;
  }
}
.search__button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.875rem;
  height: 1.875rem;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  transition: transform 0.2s ease-in-out;
  left: 0.3125rem;
  z-index: 100;
  border: 0.0625rem solid var(--color-dark);
  border-radius: 50%;
  cursor: pointer;
}
.search__input {
  transition: opacity 0.2s ease-in-out;
  display: flex;
  align-items: center;
  width: 100%;
  padding: 0.625rem 0.625rem 0.625rem 2.5rem;
  font-family: var(--font-family-base);
  background-color: var(--color-dark);
  color: var(--color-white);
  border: none;
  border-radius: 1.25rem;
  outline: none;
  opacity: 0;
}

.carousel__inner {
  position: relative;
  display: flex;
  justify-content: center;
  max-width: 37.5rem;
  min-height: 10.625rem;
  margin: 0 auto;
}
.carousel__body {
  width: 100%;
  max-width: 37.5rem;
  height: 7.5rem;
  overflow: hidden;
  border-radius: 0.625rem;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.4);
  background-color: var(--color-white);
}
.carousel__content {
  transition: transform 0.2s ease-in-out;
  display: flex;
}
.carousel__slide {
  display: flex;
  justify-content: space-between;
  min-width: 100%;
  padding: 0.625rem;
}
.carousel__box {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 30%;
  height: 6.25rem;
  background-color: var(--color-blue);
  color: var(--color-white);
  border-radius: 0.5rem;
}
.carousel__buttons {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
}
.carousel__button {
  width: 1.875rem;
  height: 1.875rem;
  transition: background-color 0.2s ease-in-out;
  background-color: rgba(0, 0, 0, 0.5);
  border: none;
  color: var(--color-white);
  border-radius: 50%;
  cursor: pointer;
}
@media (any-hover: hover) {
  .carousel__button:hover {
    background-color: rgba(0, 0, 0, 0.8);
  }
}
@media (any-hover: none) {
  .carousel__button:active {
    background-color: rgba(0, 0, 0, 0.8);
  }
}

.vercarousel__body {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 9.375rem;
}
.vercarousel__hero {
  position: relative;
  width: 18.75rem;
  display: flex;
  justify-content: center;
  flex-direction: column;
}
.vercarousel__item {
  display: flex;
  align-items: center;
  position: absolute;
  width: 100%;
  padding-inline: 0.75rem;
  opacity: 0;
  filter: drop-shadow(0 0.125rem 0.125rem #555);
  will-change: transform, opacity;
  --animation-delay-fraction: 3s;
  animation: carousel-animate-vertical 27s linear infinite;
  animation-delay: calc(var(--animation-delay-fraction) * (var(--index) - 2));
}
@keyframes carousel-animate-vertical {
  0% {
    translate: 0 100%;
    scale: 0.5;
    opacity: 0;
    visibility: hidden;
  }
  3%, 11% {
    translate: 0 100%;
    scale: 0.7;
    opacity: 0.4;
    visibility: visible;
  }
  14%, 22% {
    translate: 0 0;
    scale: 1;
    opacity: 1;
    visibility: visible;
  }
  25%, 33% {
    translate: 0 -100%;
    scale: 0.7;
    opacity: 0.4;
    visibility: visible;
  }
  36% {
    translate: 0 -100%;
    scale: 0.5;
    opacity: 0;
    visibility: visible;
  }
  100% {
    translate: 0 -100%;
    scale: 0.5;
    opacity: 0;
    visibility: visible;
  }
}
.vercarousel__item-body {
  width: 100%;
  background-color: var(--color-white);
  border-radius: 0.5rem;
  padding: 1rem 1.25rem;
}
.vercarousel__text {
  text-transform: uppercase;
  font-size: 1.25rem;
  margin-top: 0.625rem;
}

.accordion__body {
  width: 25rem;
  background-color: var(--color-dark);
  color: var(--color-white);
  border-radius: 0.5rem;
  overflow: hidden;
  margin: 0 auto;
}
.accordion__section {
  transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out;
  padding: 0.9375rem;
  border-bottom: 1px solid var(--color-grey);
  cursor: pointer;
}
@media (any-hover: hover) {
  .accordion__section:hover {
    background-color: var(--color-blue);
  }
}
@media (any-hover: none) {
  .accordion__section:active {
    background-color: var(--color-blue);
  }
}
.accordion__heading {
  position: relative;
  font-size: 1.5625rem;
}
.accordion__heading::before, .accordion__heading::after {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.2s ease-in-out;
  content: "";
  right: 0.9375rem;
  width: 1.25rem;
  height: 0.125rem;
  background-color: currentColor;
}
.accordion__heading::before {
  transform: translateY(-50%) rotate(90deg);
}
.accordion__heading::after {
  transform: translateY(-50%) rotate(0deg);
}
.accordion__heading.is-active::before {
  transform: translateY(-50%) rotate(0deg);
}
.accordion__content {
  transition: max-height 0.2s ease-in-out;
  max-height: 0;
  padding-inline: 0.9375rem;
  background-color: var(--color-dark-grey);
  border-radius: 0.5rem;
  overflow: hidden;
}
.accordion__content.is-active {
  max-height: 9.375rem;
}
.accordion__description {
  font-size: 1rem;
  margin-block: 0.625rem;
}

.generate-password__body {
  display: grid;
  gap: 2.5rem;
  background-color: var(--color-white);
  padding: 1.875rem;
  border-radius: 0.625rem;
  box-shadow: 0.125rem 0.125rem 1.25rem var(--color-dark);
  max-width: 25rem;
  margin: 0 auto;
}
.generate-password__input {
  width: 100%;
  height: 3.125rem;
  padding: 0.625rem;
  user-select: none;
  font-size: 1.25rem;
  font-weight: 800;
  color: var(--color-blue);
  border: none;
  border: 0.125rem solid var(--color-blue);
  border-radius: 0.3125rem;
  outline: none;
}
.generate-password__input::placeholder {
  font-weight: 800;
  font-size: 1.25rem;
}
.generate-password__buttons {
  display: flex;
  justify-content: center;
  column-gap: 30px;
}
.generate-password__button {
  font-weight: 800;
  font-size: 0.9375rem;
  padding: 0.625rem 0.9375rem;
  background-color: var(--color-dark);
  color: var(--color-white);
  border: none;
  border-radius: 0.3125rem;
  cursor: pointer;
}
@media (any-hover: hover) {
  .generate-password__button:hover {
    background-color: var(--color-blue);
  }
}
@media (any-hover: none) {
  .generate-password__button:active {
    background-color: var(--color-blue);
  }
}

.screen-light__inner {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: fixed;
  top: 0;
  right: 0;
  margin-top: 1.25rem;
  padding-inline: 1.25rem;
}
.screen-light__body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 0.3125rem;
}
.screen-light__input {
  -webkit-appearance: none;
  width: 12.5rem;
  height: 0.5rem;
  background-color: var(--color-dark-grey);
  border-radius: 0.3125rem;
}
.screen-light__input::-webkit-slider-thumb {
  width: 1.25rem;
  height: 1.25rem;
  -webkit-appearance: none;
  appearance: none;
  background: var(--color-blue);
  border-radius: 50%;
  cursor: pointer;
}
.screen-light__text {
  font-weight: 600;
}
.screen-light__button-reset {
  font-size: 1.25rem;
  color: var(--color-white);
  background-color: var(--color-blue);
  border: none;
  border-radius: 0.3125rem;
  padding: 0.4375rem 0.625rem;
  cursor: pointer;
}
@media (any-hover: hover) {
  .screen-light__button-reset:hover {
    background-color: var(--color-dark-grey);
  }
}
@media (any-hover: none) {
  .screen-light__button-reset:active {
    background-color: var(--color-dark-grey);
  }
}

.modal__inner {
  display: flex;
  justify-content: center;
}
.modal__button-open {
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 800;
  background-color: var(--color-blue);
  border: none;
  border-radius: 0.625rem;
  padding: 0.4375rem 0.625rem;
  margin: 20px;
  cursor: pointer;
}
@media (any-hover: hover) {
  .modal__button-open:hover {
    background-color: var(--color-dark-grey);
  }
}
@media (any-hover: none) {
  .modal__button-open:active {
    background-color: var(--color-dark-grey);
  }
}
.modal__button-close {
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  background-color: transparent;
  cursor: pointer;
}
@media (any-hover: hover) {
  .modal__button-close:hover svg path {
    fill: var(--color-blue);
  }
}
@media (any-hover: none) {
  .modal__button-close:active svg path {
    fill: var(--color-blue);
  }
}
.modal__overlay {
  transition: opacity 0.2s ease-in-out, background-color 0.2s ease-in-out, visibility 0.2s ease-in-out;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0);
  z-index: 100;
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}
.modal__overlay.is-active {
  visibility: visible;
  opacity: 1;
  pointer-events: auto;
  background-color: rgba(0, 0, 0, 0.5);
}
.modal__body {
  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.9);
  z-index: 110;
  width: min(50rem, 90vw);
  max-height: min(31.25rem, 80vh);
  display: grid;
  row-gap: 1.25rem;
  padding: 1.25rem;
  border-radius: 1.25rem;
  background-color: var(--color-white);
  opacity: 0;
  visibility: hidden;
  overflow: hidden;
}
@media (width <= 47.99875rem) {
  .modal__body {
    width: 95vw;
    max-height: 90vh;
  }
}
.modal__body.is-active {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
  visibility: visible;
}
.modal__header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 1.25rem;
}
.modal__description {
  overflow-y: scroll;
  height: 18.75rem;
}
.modal__description::-webkit-scrollbar {
  width: 0.375rem;
}
.modal__description::-webkit-scrollbar-thumb {
  background-color: var(--color-dark-grey);
  border-radius: 0.1875rem;
}

/*# sourceMappingURL=main.css.map */